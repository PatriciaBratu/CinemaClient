Online Movie Library Admin Client (C/C++)
Project Overview
This project is a command-line client in C/C++ for managing users in an online movie library via a REST API. The client interacts with a pre-implemented server that exposes HTTP endpoints for creating, deleting, and listing users. The application uses the Parson library for JSON parsing and manipulation.
Code Organization
The code is structured into separate files by functionality for readability and maintainability:
collection.c – handles user collections.
admin.c – admin login/logout and user management.
user.c – (optional) regular user operations.
movies.c – movie-related operations.
Authentication and State Management
admin_cookie – stores the cookie received upon admin login.
admin_logged – flag indicating if the admin is logged in.
user_cookie – stores regular user session cookie (if implemented).
jwt_token – JWT token for user authentication.
Key Functions
login_admin(host, port, payload) – sends a POST request to /api/v1/tema/admin/login and sets admin_cookie on success.
logout_admin(host, port) – sends a GET request to /api/v1/tema/admin/logout and clears session variables.
add_user(host, port, payload) – adds a new user (admin must be logged in).
get_users(host, port) – fetches and prints all users in JSON format.
delete_user(host, port, username) – deletes the specified user and clears related session variables.
response_succ_or_fail(response) – checks HTTP status and prints success or error messages.
get_json_body(http_response) – extracts the JSON body from an HTTP response.
parse_and_print_users(json_string) – parses JSON and prints user information.
